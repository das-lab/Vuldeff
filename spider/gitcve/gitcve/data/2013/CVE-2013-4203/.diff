diff --git a/lib/rgpg/gem_info.rb b/lib/rgpg/gem_info.rb
index 5a8980b..06a2684 100644
--- a/lib/rgpg/gem_info.rb
+++ b/lib/rgpg/gem_info.rb
@@ -2,7 +2,7 @@ module Rgpg
   module GemInfo
     MAJOR_VERSION = 0
     MINOR_VERSION = 2
-    PATCH_VERSION = 2
+    PATCH_VERSION = 3
 
     def self.version_string
       [MAJOR_VERSION, MINOR_VERSION, PATCH_VERSION].join('.')
diff --git a/lib/rgpg/gpg_helper.rb b/lib/rgpg/gpg_helper.rb
index 8e2de1d..e3d506e 100644
--- a/lib/rgpg/gpg_helper.rb
+++ b/lib/rgpg/gpg_helper.rb
@@ -1,4 +1,5 @@
 require 'tempfile'
+require 'shellwords'
 
 module Rgpg
   module GpgHelper
@@ -10,7 +11,7 @@ def self.generate_key_pair(key_base_name, recipient, real_name)
       begin
         script_file.write(script)
         script_file.close
-        result = system("gpg --batch --gen-key #{script_file.path}")
+        result = system("gpg --batch --gen-key #{Shellwords.escape(script_file.path)}")
         raise RuntimeError.new('gpg failed') unless result
       ensure
         script_file.close
@@ -62,12 +63,12 @@ def self.run_gpg(*args)
         'gpg',
         '--no-default-keyring'
       ] + args
-      command_line = fragments.join(' ')
+      command_line = fragments.collect { |fragment| Shellwords.escape(fragment) }.join(' ')
 
       output_file = Tempfile.new('gpg-output')
       begin
         output_file.close
-        result = system("#{command_line} > #{output_file.path} 2>&1")
+        result = system("#{command_line} > #{Shellwords.escape(output_file.path)} 2>&1")
       ensure
         output_file.unlink
       end
