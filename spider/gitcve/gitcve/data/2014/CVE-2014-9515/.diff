diff --git a/docs/asciidoc/migration/v6-to-v61.adoc b/docs/asciidoc/migration/v6-to-v61.adoc
index af7de8bbe..6a4315da9 100644
--- a/docs/asciidoc/migration/v6-to-v61.adoc
+++ b/docs/asciidoc/migration/v6-to-v61.adoc
@@ -107,3 +107,19 @@ Object createBean(Object source, Class<?> sourceClass, String targetBeanId, Bean
 org.dozer.stats
 org.dozer.jmx
 ----
+
+=== 8. Updated dozer-proto package name
+**From:**
+[source,java,prettyprint]
+----
+org.dozer
+----
+
+**To:**
+[source,java,prettyprint]
+----
+com.github.dozermapper.protobuf
+----
+
+
+
diff --git a/proto/src/main/java/org/dozer/ProtobufSupportModule.java b/proto/src/main/java/com/github/dozermapper/protobuf/ProtobufSupportModule.java
similarity index 86%
rename from proto/src/main/java/org/dozer/ProtobufSupportModule.java
rename to proto/src/main/java/com/github/dozermapper/protobuf/ProtobufSupportModule.java
index 8e8c59d25..23f4ae487 100644
--- a/proto/src/main/java/org/dozer/ProtobufSupportModule.java
+++ b/proto/src/main/java/com/github/dozermapper/protobuf/ProtobufSupportModule.java
@@ -13,19 +13,22 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer;
+package com.github.dozermapper.protobuf;
 
 import java.util.Collection;
 import java.util.Collections;
+
+import com.github.dozermapper.protobuf.builder.ByProtobufBuilder;
+import com.github.dozermapper.protobuf.classmap.generator.ProtobufBeanFieldsDetector;
+import com.github.dozermapper.protobuf.propertydescriptor.ProtoFieldPropertyDescriptorCreationStrategy;
+
+import org.dozer.DozerModule;
 import org.dozer.builder.BeanBuilderCreationStrategy;
-import org.dozer.builder.ByProtobufBuilder;
 import org.dozer.classmap.generator.BeanFieldsDetector;
-import org.dozer.classmap.generator.ProtobufBeanFieldsDetector;
 import org.dozer.config.BeanContainer;
 import org.dozer.factory.DestBeanCreator;
 import org.dozer.propertydescriptor.PropertyDescriptorCreationStrategy;
 import org.dozer.propertydescriptor.PropertyDescriptorFactory;
-import org.dozer.propertydescriptor.ProtoFieldPropertyDescriptorCreationStrategy;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/main/java/org/dozer/builder/ByProtobufBuilder.java b/proto/src/main/java/com/github/dozermapper/protobuf/builder/ByProtobufBuilder.java
similarity index 88%
rename from proto/src/main/java/org/dozer/builder/ByProtobufBuilder.java
rename to proto/src/main/java/com/github/dozermapper/protobuf/builder/ByProtobufBuilder.java
index 31d10503f..e57b06f86 100644
--- a/proto/src/main/java/org/dozer/builder/ByProtobufBuilder.java
+++ b/proto/src/main/java/com/github/dozermapper/protobuf/builder/ByProtobufBuilder.java
@@ -13,13 +13,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.builder;
+package com.github.dozermapper.protobuf.builder;
 
+import com.github.dozermapper.protobuf.util.ProtoUtils;
 import com.google.protobuf.Message;
 
 import org.dozer.BeanBuilder;
+import org.dozer.builder.BeanBuilderCreationStrategy;
 import org.dozer.factory.BeanCreationDirective;
-import org.dozer.util.ProtoUtils;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/main/java/org/dozer/builder/ProtoBeanBuilder.java b/proto/src/main/java/com/github/dozermapper/protobuf/builder/ProtoBeanBuilder.java
similarity index 96%
rename from proto/src/main/java/org/dozer/builder/ProtoBeanBuilder.java
rename to proto/src/main/java/com/github/dozermapper/protobuf/builder/ProtoBeanBuilder.java
index 943ecadbe..f421e482e 100644
--- a/proto/src/main/java/org/dozer/builder/ProtoBeanBuilder.java
+++ b/proto/src/main/java/com/github/dozermapper/protobuf/builder/ProtoBeanBuilder.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.builder;
+package com.github.dozermapper.protobuf.builder;
 
 import com.google.protobuf.Message;
 
diff --git a/proto/src/main/java/org/dozer/classmap/generator/ProtobufBeanFieldsDetector.java b/proto/src/main/java/com/github/dozermapper/protobuf/classmap/generator/ProtobufBeanFieldsDetector.java
similarity index 90%
rename from proto/src/main/java/org/dozer/classmap/generator/ProtobufBeanFieldsDetector.java
rename to proto/src/main/java/com/github/dozermapper/protobuf/classmap/generator/ProtobufBeanFieldsDetector.java
index 6e98dde52..f19ce6fb9 100644
--- a/proto/src/main/java/org/dozer/classmap/generator/ProtobufBeanFieldsDetector.java
+++ b/proto/src/main/java/com/github/dozermapper/protobuf/classmap/generator/ProtobufBeanFieldsDetector.java
@@ -13,17 +13,17 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.classmap.generator;
+package com.github.dozermapper.protobuf.classmap.generator;
 
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
-import com.google.common.base.CaseFormat;
+import com.github.dozermapper.protobuf.util.ProtoUtils;
 import com.google.protobuf.Descriptors;
 import com.google.protobuf.Message;
 
-import org.dozer.util.ProtoUtils;
+import org.dozer.classmap.generator.BeanFieldsDetector;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/main/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptor.java b/proto/src/main/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptor.java
similarity index 95%
rename from proto/src/main/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptor.java
rename to proto/src/main/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptor.java
index a2e8ea084..c1e5c654f 100644
--- a/proto/src/main/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptor.java
+++ b/proto/src/main/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptor.java
@@ -13,24 +13,26 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.propertydescriptor;
+package com.github.dozermapper.protobuf.propertydescriptor;
 
 import java.lang.reflect.Method;
 import java.util.Map;
 
+import com.github.dozermapper.protobuf.builder.ProtoBeanBuilder;
+import com.github.dozermapper.protobuf.util.ProtoUtils;
 import com.google.protobuf.Descriptors;
 import com.google.protobuf.Message;
 
 import org.dozer.BeanBuilder;
 import org.dozer.MappingException;
-import org.dozer.builder.ProtoBeanBuilder;
 import org.dozer.config.BeanContainer;
 import org.dozer.factory.DestBeanCreator;
 import org.dozer.fieldmap.FieldMap;
 import org.dozer.fieldmap.HintContainer;
+import org.dozer.propertydescriptor.AbstractPropertyDescriptor;
+import org.dozer.propertydescriptor.PropertyDescriptorFactory;
 import org.dozer.util.DeepHierarchyUtils;
 import org.dozer.util.MappingUtils;
-import org.dozer.util.ProtoUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
diff --git a/proto/src/main/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategy.java b/proto/src/main/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategy.java
similarity index 88%
rename from proto/src/main/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategy.java
rename to proto/src/main/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategy.java
index cad230982..e10745f65 100644
--- a/proto/src/main/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategy.java
+++ b/proto/src/main/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategy.java
@@ -13,16 +13,19 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.propertydescriptor;
+package com.github.dozermapper.protobuf.propertydescriptor;
 
+import com.github.dozermapper.protobuf.util.ProtoUtils;
 import com.google.protobuf.Descriptors;
 import com.google.protobuf.Message;
 
 import org.dozer.config.BeanContainer;
 import org.dozer.factory.DestBeanCreator;
 import org.dozer.fieldmap.HintContainer;
+import org.dozer.propertydescriptor.DozerPropertyDescriptor;
+import org.dozer.propertydescriptor.PropertyDescriptorCreationStrategy;
+import org.dozer.propertydescriptor.PropertyDescriptorFactory;
 import org.dozer.util.MappingUtils;
-import org.dozer.util.ProtoUtils;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/main/java/org/dozer/util/ProtoUtils.java b/proto/src/main/java/com/github/dozermapper/protobuf/util/ProtoUtils.java
similarity index 98%
rename from proto/src/main/java/org/dozer/util/ProtoUtils.java
rename to proto/src/main/java/com/github/dozermapper/protobuf/util/ProtoUtils.java
index 78d757147..86938f6dc 100644
--- a/proto/src/main/java/org/dozer/util/ProtoUtils.java
+++ b/proto/src/main/java/com/github/dozermapper/protobuf/util/ProtoUtils.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.util;
+package com.github.dozermapper.protobuf.util;
 
 import java.lang.reflect.Method;
 import java.util.ArrayList;
@@ -30,8 +30,7 @@
 
 import org.apache.commons.lang3.StringUtils;
 import org.dozer.config.BeanContainer;
-
-import static com.google.common.base.CaseFormat.LOWER_UNDERSCORE;
+import org.dozer.util.MappingUtils;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/main/resources/META-INF/services/org.dozer.DozerModule b/proto/src/main/resources/META-INF/services/org.dozer.DozerModule
index 9de710557..28588a303 100644
--- a/proto/src/main/resources/META-INF/services/org.dozer.DozerModule
+++ b/proto/src/main/resources/META-INF/services/org.dozer.DozerModule
@@ -1 +1 @@
-org.dozer.ProtobufSupportModule
\ No newline at end of file
+com.github.dozermapper.protobuf.ProtobufSupportModule
diff --git a/proto/src/test/java/org/dozer/functional_tests/FieldNaming.java b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/FieldNaming.java
similarity index 93%
rename from proto/src/test/java/org/dozer/functional_tests/FieldNaming.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/FieldNaming.java
index 7440ed76b..2ea452483 100644
--- a/proto/src/test/java/org/dozer/functional_tests/FieldNaming.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/FieldNaming.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.functional_tests;
+package com.github.dozermapper.protobuf.functional_tests;
 
 public class FieldNaming {
     private String snakeCaseField;
diff --git a/proto/src/test/java/org/dozer/functional_tests/ProtoAbstractTest.java b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoAbstractTest.java
similarity index 95%
rename from proto/src/test/java/org/dozer/functional_tests/ProtoAbstractTest.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoAbstractTest.java
index 7c6188f31..f2d63a5e0 100644
--- a/proto/src/test/java/org/dozer/functional_tests/ProtoAbstractTest.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoAbstractTest.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.functional_tests;
+package com.github.dozermapper.protobuf.functional_tests;
 
 import org.dozer.DozerBeanMapperBuilder;
 import org.dozer.Mapper;
diff --git a/proto/src/test/java/org/dozer/functional_tests/ProtoBeansDeepMappingTest.java b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoBeansDeepMappingTest.java
similarity index 88%
rename from proto/src/test/java/org/dozer/functional_tests/ProtoBeansDeepMappingTest.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoBeansDeepMappingTest.java
index c0db14636..9e96428fb 100644
--- a/proto/src/test/java/org/dozer/functional_tests/ProtoBeansDeepMappingTest.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoBeansDeepMappingTest.java
@@ -13,18 +13,19 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.functional_tests;
+package com.github.dozermapper.protobuf.functional_tests;
 
 import java.util.Arrays;
 
+import com.github.dozermapper.protobuf.vo.proto.LiteTestObject;
+import com.github.dozermapper.protobuf.vo.proto.LiteTestObjectContainer;
+import com.github.dozermapper.protobuf.vo.proto.ObjectWithCollection;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollectionContainer;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.SimpleProtoTestObject;
+
 import org.dozer.Mapper;
-import org.dozer.vo.proto.LiteTestObject;
-import org.dozer.vo.proto.LiteTestObjectContainer;
-import org.dozer.vo.proto.ObjectWithCollection;
-import org.dozer.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject;
-import org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection;
-import org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollectionContainer;
-import org.dozer.vo.proto.ProtoTestObjects.SimpleProtoTestObject;
 import org.junit.Before;
 import org.junit.Test;
 
diff --git a/proto/src/test/java/org/dozer/functional_tests/ProtoBeansMappingTest.java b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoBeansMappingTest.java
similarity index 78%
rename from proto/src/test/java/org/dozer/functional_tests/ProtoBeansMappingTest.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoBeansMappingTest.java
index 635af2a6a..88e24d697 100644
--- a/proto/src/test/java/org/dozer/functional_tests/ProtoBeansMappingTest.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/functional_tests/ProtoBeansMappingTest.java
@@ -13,32 +13,32 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.functional_tests;
+package com.github.dozermapper.protobuf.functional_tests;
 
 import java.util.Arrays;
 
+import com.github.dozermapper.protobuf.vo.proto.LiteTestObject;
+import com.github.dozermapper.protobuf.vo.proto.MapExample;
+import com.github.dozermapper.protobuf.vo.proto.ObjectWithCollection;
+import com.github.dozermapper.protobuf.vo.proto.ObjectWithEnumCollection;
+import com.github.dozermapper.protobuf.vo.proto.ObjectWithEnumField;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtoEnum;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtoObjectWithEnumField;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufFieldNaming;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufMapExample;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithEnumCollection;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.SimpleProtoTestObject;
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.SimpleProtoTestObjectWithoutRequired;
+import com.github.dozermapper.protobuf.vo.proto.SimpleEnum;
+import com.github.dozermapper.protobuf.vo.proto.TestObject;
+import com.github.dozermapper.protobuf.vo.proto.TestObjectContainer;
+
 import org.dozer.Mapper;
 import org.dozer.MappingException;
 import org.dozer.config.BeanContainer;
 import org.dozer.util.MappingUtils;
-import org.dozer.vo.proto.LiteTestObject;
-import org.dozer.vo.proto.MapExample;
-import org.dozer.vo.proto.ObjectWithCollection;
-import org.dozer.vo.proto.ObjectWithEnumCollection;
-import org.dozer.vo.proto.ObjectWithEnumField;
-import org.dozer.vo.proto.ProtoTestObjects.ProtoEnum;
-import org.dozer.vo.proto.ProtoTestObjects.ProtoObjectWithEnumField;
-import org.dozer.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject;
-import org.dozer.vo.proto.ProtoTestObjects.ProtobufFieldNaming;
-import org.dozer.vo.proto.ProtoTestObjects.ProtobufMapExample;
-import org.dozer.vo.proto.ProtoTestObjects.ProtobufWithEnumCollection;
-import org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection;
-import org.dozer.vo.proto.ProtoTestObjects.SimpleProtoTestObject;
-import org.dozer.vo.proto.ProtoTestObjects.SimpleProtoTestObjectWithoutRequired;
-import org.dozer.vo.proto.SimpleEnum;
-import org.dozer.vo.proto.TestObject;
-import org.dozer.vo.proto.TestObjectContainer;
-import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
@@ -67,7 +67,7 @@ public void setUp() throws Exception {
 
     @Test
     public void testTrivial() {
-        Class<?> type = MappingUtils.loadClass("org.dozer.vo.proto.ProtoTestObjects.SimpleProtoTestObject", beanContainer);
+        Class<?> type = MappingUtils.loadClass("com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.SimpleProtoTestObject", beanContainer);
         assertNotNull(type);
     }
 
@@ -77,7 +77,7 @@ public void testSimple_toProto() {
         source.setOne("ABC");
         SimpleProtoTestObject protoResult = mapper.map(source, SimpleProtoTestObject.class);
         assertNotNull(protoResult);
-        Assert.assertEquals("ABC", protoResult.getOne());
+        assertEquals("ABC", protoResult.getOne());
     }
 
     @Test
@@ -88,7 +88,7 @@ public void testSimple_fromProto() {
 
         TestObject pojoResult = mapper.map(source, TestObject.class);
         assertNotNull(pojoResult);
-        Assert.assertEquals("ABC", pojoResult.getOne());
+        assertEquals("ABC", pojoResult.getOne());
     }
 
     @Test
@@ -97,7 +97,7 @@ public void testSimple_wildcard_toProto() {
         source.setOne("ABC");
         SimpleProtoTestObject protoResult = mapper.map(source, SimpleProtoTestObject.class);
         assertNotNull(protoResult);
-        Assert.assertEquals("ABC", protoResult.getOne());
+        assertEquals("ABC", protoResult.getOne());
     }
 
     @Test
@@ -106,7 +106,7 @@ public void testSimple_wildcard_fromProto() {
         sourceBuilder.setOne("ABC");
         LiteTestObject pojoResult = mapper.map(sourceBuilder.build(), LiteTestObject.class);
         assertNotNull(pojoResult);
-        Assert.assertEquals("ABC", pojoResult.getOne());
+        assertEquals("ABC", pojoResult.getOne());
     }
 
     @Test
@@ -136,9 +136,9 @@ public void testNestedProtoField_toProto() {
 
         ProtoTestObjectWithNestedProtoObject result = mapper.map(source, ProtoTestObjectWithNestedProtoObject.class);
         assertNotNull(result);
-        Assert.assertEquals("Name", result.getOne());
+        assertEquals("Name", result.getOne());
         assertNotNull(result.getNestedObject());
-        Assert.assertEquals("InnerName", result.getNestedObject().getOne());
+        assertEquals("InnerName", result.getNestedObject().getOne());
     }
 
     @Test
@@ -152,9 +152,9 @@ public void testNestedProtoField_fromProto() {
 
         TestObjectContainer result = mapper.map(source, TestObjectContainer.class);
         assertNotNull(result);
-        Assert.assertEquals("Name", result.getOne());
+        assertEquals("Name", result.getOne());
         assertNotNull(result.getNested());
-        Assert.assertEquals("InnerName", result.getNested().getOne());
+        assertEquals("InnerName", result.getNested().getOne());
     }
 
     @Test
@@ -165,7 +165,7 @@ public void testEnumProtoField_toProto() {
         ProtoObjectWithEnumField result = mapper.map(source, ProtoObjectWithEnumField.class);
         assertNotNull(result);
         assertNotNull(result.getEnumField());
-        Assert.assertEquals(ProtoEnum.VALUE1, result.getEnumField());
+        assertEquals(ProtoEnum.VALUE1, result.getEnumField());
     }
 
     @Test
@@ -177,7 +177,7 @@ public void testEnumProtoField_fromProto() {
         ObjectWithEnumField result = mapper.map(source, ObjectWithEnumField.class);
         assertNotNull(result);
         assertNotNull(result.getEnumField());
-        Assert.assertEquals(SimpleEnum.VALUE1, result.getEnumField());
+        assertEquals(SimpleEnum.VALUE1, result.getEnumField());
     }
 
     @Test
@@ -191,8 +191,8 @@ public void testRepeatedField_toProto() {
         ProtobufWithSimpleCollection result = mapper.map(source, ProtobufWithSimpleCollection.class);
         assertNotNull(result);
         assertNotNull(result.getObjectList());
-        Assert.assertEquals(1, result.getObjectCount());
-        Assert.assertEquals("One", result.getObject(0).getOne());
+        assertEquals(1, result.getObjectCount());
+        assertEquals("One", result.getObject(0).getOne());
     }
 
     @Test
@@ -206,8 +206,8 @@ public void testRepeatedField_fromProto() {
         ObjectWithCollection result = mapper.map(sourceBuilder.build(), ObjectWithCollection.class);
         assertNotNull(result);
         assertNotNull(result.getObjects());
-        Assert.assertEquals(1, result.getObjects().size());
-        Assert.assertEquals("One", result.getObjects().get(0).getOne());
+        assertEquals(1, result.getObjects().size());
+        assertEquals("One", result.getObjects().get(0).getOne());
     }
 
     @Test
@@ -218,8 +218,8 @@ public void testRepeatedEnumField_toProto() {
         ProtobufWithEnumCollection result = mapper.map(source, ProtobufWithEnumCollection.class);
         assertNotNull(result);
         assertNotNull(result.getObjectList());
-        Assert.assertEquals(1, result.getObjectCount());
-        Assert.assertEquals(ProtoEnum.VALUE1, result.getObject(0));
+        assertEquals(1, result.getObjectCount());
+        assertEquals(ProtoEnum.VALUE1, result.getObject(0));
     }
 
     @Test
@@ -230,8 +230,8 @@ public void testRepeatedEnumField_fromProto() {
         ObjectWithEnumCollection result = mapper.map(sourceBuilder.build(), ObjectWithEnumCollection.class);
         assertNotNull(result);
         assertNotNull(result.getEnums());
-        Assert.assertEquals(1, result.getEnums().size());
-        Assert.assertEquals(SimpleEnum.VALUE1, result.getEnums().get(0));
+        assertEquals(1, result.getEnums().size());
+        assertEquals(SimpleEnum.VALUE1, result.getEnums().get(0));
     }
 
     @Test
diff --git a/proto/src/test/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategyTest.java b/proto/src/test/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategyTest.java
similarity index 89%
rename from proto/src/test/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategyTest.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategyTest.java
index 1ffb7293d..18e306a08 100644
--- a/proto/src/test/java/org/dozer/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategyTest.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/propertydescriptor/ProtoFieldPropertyDescriptorCreationStrategyTest.java
@@ -13,11 +13,13 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.propertydescriptor;
+package com.github.dozermapper.protobuf.propertydescriptor;
+
+import com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects;
 
 import org.dozer.config.BeanContainer;
 import org.dozer.factory.DestBeanCreator;
-import org.dozer.vo.proto.ProtoTestObjects;
+import org.dozer.propertydescriptor.PropertyDescriptorFactory;
 import org.junit.Before;
 import org.junit.Test;
 
diff --git a/proto/src/test/java/org/dozer/vo/proto/LiteTestObject.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/LiteTestObject.java
similarity index 94%
rename from proto/src/test/java/org/dozer/vo/proto/LiteTestObject.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/LiteTestObject.java
index 642ce6acb..96063d78c 100644
--- a/proto/src/test/java/org/dozer/vo/proto/LiteTestObject.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/LiteTestObject.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/test/java/org/dozer/vo/proto/LiteTestObjectContainer.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/LiteTestObjectContainer.java
similarity index 94%
rename from proto/src/test/java/org/dozer/vo/proto/LiteTestObjectContainer.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/LiteTestObjectContainer.java
index 8f7ffc745..16ccae5d8 100644
--- a/proto/src/test/java/org/dozer/vo/proto/LiteTestObjectContainer.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/LiteTestObjectContainer.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/test/java/org/dozer/vo/proto/MapExample.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/MapExample.java
similarity index 95%
rename from proto/src/test/java/org/dozer/vo/proto/MapExample.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/MapExample.java
index 360e0a565..3dfe83cb2 100644
--- a/proto/src/test/java/org/dozer/vo/proto/MapExample.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/MapExample.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 import java.util.HashMap;
 import java.util.Map;
diff --git a/proto/src/test/java/org/dozer/vo/proto/ObjectWithCollection.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithCollection.java
similarity index 94%
rename from proto/src/test/java/org/dozer/vo/proto/ObjectWithCollection.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithCollection.java
index 6c6f0f1f2..faba28a1b 100644
--- a/proto/src/test/java/org/dozer/vo/proto/ObjectWithCollection.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithCollection.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 import java.util.List;
 
diff --git a/proto/src/test/java/org/dozer/vo/proto/ObjectWithEnumCollection.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithEnumCollection.java
similarity index 95%
rename from proto/src/test/java/org/dozer/vo/proto/ObjectWithEnumCollection.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithEnumCollection.java
index 2d68cd4c7..cd2fe5aea 100644
--- a/proto/src/test/java/org/dozer/vo/proto/ObjectWithEnumCollection.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithEnumCollection.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 import java.util.List;
 
diff --git a/proto/src/test/java/org/dozer/vo/proto/ObjectWithEnumField.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithEnumField.java
similarity index 95%
rename from proto/src/test/java/org/dozer/vo/proto/ObjectWithEnumField.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithEnumField.java
index 971e4e001..c6534a3c9 100644
--- a/proto/src/test/java/org/dozer/vo/proto/ObjectWithEnumField.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/ObjectWithEnumField.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/test/java/org/dozer/vo/proto/SimpleEnum.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/SimpleEnum.java
similarity index 93%
rename from proto/src/test/java/org/dozer/vo/proto/SimpleEnum.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/SimpleEnum.java
index 17b819398..213665c86 100644
--- a/proto/src/test/java/org/dozer/vo/proto/SimpleEnum.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/SimpleEnum.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/test/java/org/dozer/vo/proto/TestObject.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/TestObject.java
similarity index 95%
rename from proto/src/test/java/org/dozer/vo/proto/TestObject.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/TestObject.java
index bcb55cae6..1898a2a56 100755
--- a/proto/src/test/java/org/dozer/vo/proto/TestObject.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/TestObject.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 /**
  * @author garsombke.franz
diff --git a/proto/src/test/java/org/dozer/vo/proto/TestObjectContainer.java b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/TestObjectContainer.java
similarity index 95%
rename from proto/src/test/java/org/dozer/vo/proto/TestObjectContainer.java
rename to proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/TestObjectContainer.java
index a26514910..12adc8163 100644
--- a/proto/src/test/java/org/dozer/vo/proto/TestObjectContainer.java
+++ b/proto/src/test/java/com/github/dozermapper/protobuf/vo/proto/TestObjectContainer.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.dozer.vo.proto;
+package com.github.dozermapper.protobuf.vo.proto;
 
 /**
  * @author Dmitry Spikhalskiy
diff --git a/proto/src/test/proto/ProtoTestObjects.proto b/proto/src/test/proto/ProtoTestObjects.proto
index 190ec2cd7..f749574ae 100644
--- a/proto/src/test/proto/ProtoTestObjects.proto
+++ b/proto/src/test/proto/ProtoTestObjects.proto
@@ -1,5 +1,5 @@
 syntax = "proto3";
-option java_package = "org.dozer.vo.proto";
+option java_package = "com.github.dozermapper.protobuf.vo.proto";
 option java_outer_classname = "ProtoTestObjects";
 
 message SimpleProtoTestObject {
@@ -43,4 +43,4 @@ message ProtobufMapExample {
 
 message ProtobufFieldNaming {
     string snake_case_field = 1;
-}
\ No newline at end of file
+}
diff --git a/proto/src/test/resources/mappings/protoBeansMapping.xml b/proto/src/test/resources/mappings/protoBeansMapping.xml
index ddefe2c56..31c274006 100644
--- a/proto/src/test/resources/mappings/protoBeansMapping.xml
+++ b/proto/src/test/resources/mappings/protoBeansMapping.xml
@@ -21,13 +21,13 @@
           xsi:schemaLocation="http://dozermapper.github.io/schema/bean-mapping http://dozermapper.github.io/schema/bean-mapping.xsd">
 
     <mapping wildcard="true">
-        <class-a>org.dozer.vo.proto.LiteTestObject</class-a>
-        <class-b>org.dozer.vo.proto.ProtoTestObjects.SimpleProtoTestObject</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.LiteTestObject</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.SimpleProtoTestObject</class-b>
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.TestObject</class-a>
-        <class-b>org.dozer.vo.proto.ProtoTestObjects.SimpleProtoTestObject</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.TestObject</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.SimpleProtoTestObject</class-b>
         <field>
             <a>one</a>
             <b>one</b>
@@ -35,8 +35,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.TestObject</class-a>
-        <class-b>org.dozer.vo.proto.ProtoTestObjects.SimpleProtoTestObjectWithoutRequired</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.TestObject</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.SimpleProtoTestObjectWithoutRequired</class-b>
         <field>
             <a>one</a>
             <b>one</b>
@@ -44,8 +44,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.TestObjectContainer</class-a>
-        <class-b>org.dozer.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.TestObjectContainer</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject</class-b>
         <field>
             <a>one</a>
             <b>one</b>
@@ -57,8 +57,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ObjectWithEnumField</class-a>
-        <class-b>org.dozer.vo.proto.ProtoTestObjects.ProtoObjectWithEnumField</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ObjectWithEnumField</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtoObjectWithEnumField</class-b>
         <field>
             <a>enumField</a>
             <b>enumField</b>
@@ -66,8 +66,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ObjectWithCollection</class-a>
-        <class-b>org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ObjectWithCollection</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection</class-b>
         <field>
             <a>objects</a>
             <b>object</b>
@@ -75,8 +75,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ObjectWithEnumCollection</class-a>
-        <class-b>org.dozer.vo.proto.ProtoTestObjects.ProtobufWithEnumCollection</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ObjectWithEnumCollection</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithEnumCollection</class-b>
         <field>
             <a>enums</a>
             <b>object</b>
diff --git a/proto/src/test/resources/mappings/protoSrcDeepBeansMapping.xml b/proto/src/test/resources/mappings/protoSrcDeepBeansMapping.xml
index 6078fb344..a53b7a4fc 100644
--- a/proto/src/test/resources/mappings/protoSrcDeepBeansMapping.xml
+++ b/proto/src/test/resources/mappings/protoSrcDeepBeansMapping.xml
@@ -21,8 +21,8 @@
           xsi:schemaLocation="http://dozermapper.github.io/schema/bean-mapping http://dozermapper.github.io/schema/bean-mapping.xsd">
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject</class-a>
-        <class-b>org.dozer.vo.proto.LiteTestObject</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtoTestObjectWithNestedProtoObject</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.LiteTestObject</class-b>
         <field>
             <a>nestedObject.one</a>
             <b>one</b>
@@ -30,8 +30,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection</class-a>
-        <class-b>org.dozer.vo.proto.LiteTestObject</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.LiteTestObject</class-b>
         <field>
             <a>object[1].one</a>
             <b>one</b>
@@ -39,8 +39,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollectionContainer</class-a>
-        <class-b>org.dozer.vo.proto.ObjectWithCollection</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollectionContainer</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.ObjectWithCollection</class-b>
         <field>
             <a>object.object</a>
             <b>objects</b>
@@ -48,8 +48,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollectionContainer</class-a>
-        <class-b>org.dozer.vo.proto.LiteTestObjectContainer</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollectionContainer</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.LiteTestObjectContainer</class-b>
         <field>
             <a>object.object[0]</a>
             <b>object</b>
@@ -57,8 +57,8 @@
     </mapping>
 
     <mapping wildcard="false">
-        <class-a>org.dozer.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection</class-a>
-        <class-b>org.dozer.vo.proto.LiteTestObjectContainer</class-b>
+        <class-a>com.github.dozermapper.protobuf.vo.proto.ProtoTestObjects.ProtobufWithSimpleCollection</class-a>
+        <class-b>com.github.dozermapper.protobuf.vo.proto.LiteTestObjectContainer</class-b>
         <field>
             <a>object[1]</a>
             <b>object</b>
