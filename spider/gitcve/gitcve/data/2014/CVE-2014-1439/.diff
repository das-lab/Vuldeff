diff --git a/hphp/runtime/ext/ext_simplexml.cpp b/hphp/runtime/ext/ext_simplexml.cpp
index 790e992a798c..91060218b75f 100644
--- a/hphp/runtime/ext/ext_simplexml.cpp
+++ b/hphp/runtime/ext/ext_simplexml.cpp
@@ -1246,6 +1246,9 @@ void c_LibXMLError::t___construct() {
 ///////////////////////////////////////////////////////////////////////////////
 // libxml
 
+static xmlParserInputBufferPtr
+hphp_libxml_input_buffer(const char *URI, xmlCharEncoding enc);
+
 class xmlErrorVec : public std::vector<xmlError> {
 public:
   ~xmlErrorVec() {
@@ -1265,13 +1268,15 @@ class LibXmlErrors : public RequestEventHandler {
   virtual void requestInit() {
     m_use_error = false;
     m_errors.reset();
-    xmlParserInputBufferCreateFilenameDefault(nullptr);
+    m_entity_loader_disabled = false;
+    xmlParserInputBufferCreateFilenameDefault(hphp_libxml_input_buffer);
   }
   virtual void requestShutdown() {
     m_use_error = false;
     m_errors.reset();
   }
 
+  bool m_entity_loader_disabled;
   bool m_use_error;
   xmlErrorVec m_errors;
 };
@@ -1374,19 +1379,19 @@ bool f_libxml_use_internal_errors(CVarRef use_errors /* = null_variant */) {
 }
 
 static xmlParserInputBufferPtr
-hphp_libxml_input_buffer_noload(const char *URI, xmlCharEncoding enc) {
-  return nullptr;
+hphp_libxml_input_buffer(const char *URI, xmlCharEncoding enc) {
+  if (s_libxml_errors->m_entity_loader_disabled) {
+    return nullptr;
+  }
+  return __xmlParserInputBufferCreateFilename(URI, enc);
 }
 
 bool f_libxml_disable_entity_loader(bool disable /* = true */) {
-  xmlParserInputBufferCreateFilenameFunc old;
+  bool old = s_libxml_errors->m_entity_loader_disabled;
 
-  if (disable) {
-    old = xmlParserInputBufferCreateFilenameDefault(hphp_libxml_input_buffer_noload);
-  } else {
-    old = xmlParserInputBufferCreateFilenameDefault(nullptr);
-  }
-  return (old == hphp_libxml_input_buffer_noload);
+  s_libxml_errors->m_entity_loader_disabled = disable;
+
+  return old;
 }
 
 ///////////////////////////////////////////////////////////////////////////////
diff --git a/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php
new file mode 100644
index 000000000000..95872eb89901
--- /dev/null
+++ b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php
@@ -0,0 +1,25 @@
+<?php
+
+$xml = <<<EOT
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE test [<!ENTITY xxe SYSTEM "XXE_URI">]>
+<foo>&xxe;</foo>
+EOT;
+
+$xml = str_replace('XXE_URI', __DIR__ . '/libxml_disable_entity_loader_payload.txt', $xml);
+
+function parseXML($xml) {
+  $doc = new DOMDocument();
+  $doc->resolveExternals = true;
+  $doc->substituteEntities = true;
+  $doc->validateOnParse = false;
+  $doc->loadXML($xml, 0);
+  return $doc->saveXML();
+}
+
+var_dump(strpos(parseXML($xml), 'SECRET_DATA') !== false);
+var_dump(libxml_disable_entity_loader(true));
+var_dump(strpos(parseXML($xml), 'SECRET_DATA') === false);
+
+echo "Done\n";
+?>
diff --git a/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf
new file mode 100644
index 000000000000..54de637bce48
--- /dev/null
+++ b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf
@@ -0,0 +1,7 @@
+bool(true)
+bool(false)
+I/O warning : failed to load external entity "%s"
+HipHop Warning: %s
+HipHop Warning: %s
+bool(true)
+Done
diff --git a/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif
new file mode 100644
index 000000000000..1086e1001966
--- /dev/null
+++ b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif
@@ -0,0 +1 @@
+<?php if (!extension_loaded('simplexml') || !extension_loaded('dom') || defined('PHP_WINDOWS_VERSION_MAJOR')) die('skip'); ?>
diff --git a/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader_payload.txt b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader_payload.txt
new file mode 100644
index 000000000000..3b8a43cc1dd8
--- /dev/null
+++ b/hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader_payload.txt
@@ -0,0 +1 @@
+SECRET_DATA
\ No newline at end of file
