diff --git a/include/monkey/mk_request.h b/include/monkey/mk_request.h
index 40acbe72..9d0213ff 100644
--- a/include/monkey/mk_request.h
+++ b/include/monkey/mk_request.h
@@ -159,8 +159,18 @@ struct session_request
     long port;
     /*------------*/
 
-    /* file descriptors */
+    /*
+     * Static file file descriptor: the following twp fields represents an
+     * opened file in the file system and a flag saying which mechanism
+     * was used to open it.
+     *
+     *  - fd_file  : common file descriptor
+     *  - fd_is_fdt: set to MK_TRUE if fd_file was opened using Vhost FDT, or
+     *               MK_FALSE for the opposite case.
+     */
     int fd_file;
+    int fd_is_fdt;
+
 
     int headers_len;
 
diff --git a/src/mk_request.c b/src/mk_request.c
index adce9ff1..94ffdf8e 100644
--- a/src/mk_request.c
+++ b/src/mk_request.c
@@ -99,7 +99,12 @@ static inline void mk_request_init(struct session_request *request)
 void mk_request_free(struct session_request *sr)
 {
     if (sr->fd_file > 0) {
-        mk_vhost_close(sr);
+        if (sr->fd_is_fdt == MK_TRUE) {
+            mk_vhost_close(sr);
+        }
+        else {
+            close(sr->fd_file);
+        }
     }
 
     if (sr->headers.location) {
@@ -841,7 +846,8 @@ int mk_request_error(int http_status, struct client_session *cs,
                 break;
             }
 
-            sr->fd_file = fd;
+            sr->fd_file   = fd;
+            sr->fd_is_fdt = MK_FALSE;
             sr->bytes_to_send = finfo.size;
             sr->headers.content_length = finfo.size;
             sr->headers.real_length    = finfo.size;
diff --git a/src/mk_vhost.c b/src/mk_vhost.c
index cd89582f..4807faf0 100644
--- a/src/mk_vhost.c
+++ b/src/mk_vhost.c
@@ -220,6 +220,7 @@ static inline int mk_vhost_fdt_open(int id, unsigned int hash,
 
             sr->vhost_fdt_id   = id;
             sr->vhost_fdt_hash = hash;
+            sr->fd_is_fdt      = MK_TRUE;
 
             return fd;
         }
@@ -262,7 +263,6 @@ static inline int mk_vhost_fdt_close(struct session_request *sr)
             return 0;
         }
     }
-
     return close(sr->fd_file);
 }
 
