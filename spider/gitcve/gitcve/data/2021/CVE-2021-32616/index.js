"use strict";

const { decode } = require("url-encode-decode"),
	fileSystem = require("fs"),
	http = require("http"),
	mime = require("mime");
http.createServer((req, res) => {
	const url = decode(req.url).replace("//", "/");
	try {
		if (fileSystem.statSync(`${__dirname}/cdn/${url}`).isFile()) {
			const data = fileSystem.readFileSync(`${__dirname}/cdn/${url}`);
			res.writeHead(200, {
				"Content-Type": mime.getType(`${__dirname}/cdn/${url}`),
			});
			res.end(data);
		} else {
			res.write(`<h1>Index of ${url}</h1><br><hr>`);
			if (url !== "/") {
				res.write('<br><a href="..">..</a>');
			}
			fileSystem.readdir(`${__dirname}/cdn/${url}`, (error, files) => {
				if (error) {
					res.writeHead(500, { "Content-Type": "text/html" });
					return res.end(
						`<h1>there was an error processing your request:</h1>\n<br/>\n<p>${error}</p>`,
					);
				}
				files.forEach((file) => {
					if (
						fileSystem
							.statSync(`${__dirname}/cdn/${url}${file}`)
							.isDirectory()
					) {
						return res.write(`<br><a href="${file}/">${file}</a>`);
					}
					return res.write(`<br><a href="${file}">${file}</a>`);
				});
				res.end();
			});
		}
	} catch (error) {
		res.writeHead(500, { "Content-Type": "text/html" });
		res.end(
			`<h1>there was an error processing your request:</h1>\n<br/>\n<p>${error}</p>`,
		);
	}
}).listen(process.env.PORT || 3000);
